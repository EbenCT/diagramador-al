// resources/js/diagram/shapes.js
import * as joint from 'jointjs';

// Crear namespace para shapes UML
joint.shapes.uml = {};

// Clase UML (adaptada de tu estructura de tablas pero para UML)
joint.shapes.uml.Class = joint.dia.Element.extend({
    markup: [
        '<g class="rotatable">',
        '<rect class="uml-class-name-rect"/>',
        '<rect class="uml-class-attrs-rect"/>',
        '<rect class="uml-class-methods-rect"/>',
        '<text class="uml-class-name-text"/>',
        '<text class="uml-class-attrs-text"/>',
        '<text class="uml-class-methods-text"/>',
        '</g>'
    ].join(''),

    defaults: joint.util.deepSupplement({
        type: 'uml.Class',
        attrs: {
            '.uml-class-name-rect': {
                'stroke': '#2563eb',
                'stroke-width': 2,
                'fill': '#dbeafe'
            },
            '.uml-class-attrs-rect': {
                'stroke': '#2563eb',
                'stroke-width': 1,
                'fill': '#ffffff'
            },
            '.uml-class-methods-rect': {
                'stroke': '#2563eb',
                'stroke-width': 1,
                'fill': '#f8fafc'
            },
            '.uml-class-name-text': {
                'ref': '.uml-class-name-rect',
                'ref-y': 0.5,
                'ref-x': 0.5,
                'text-anchor': 'middle',
                'y-alignment': 'middle',
                'font-weight': 'bold',
                'fill': '#1e40af',
                'font-size': 14,
                'font-family': 'Arial, helvetica, sans-serif'
            },
            '.uml-class-attrs-text': {
                'ref': '.uml-class-attrs-rect',
                'ref-y': 8,
                'ref-x': 8,
                'fill': '#374151',
                'font-size': 11,
                'font-family': 'Consolas, monospace'
            },
            '.uml-class-methods-text': {
                'ref': '.uml-class-methods-rect',
                'ref-y': 8,
                'ref-x': 8,
                'fill': '#374151',
                'font-size': 11,
                'font-family': 'Consolas, monospace'
            }
        },
        className: 'MiClase',
        attributes: ['- id: int', '- nombre: String'],
        methods: ['+ getId(): int', '+ getNombre(): String'],
        size: { width: 200, height: 120 }
    }, joint.dia.Element.prototype.defaults),

    initialize: function() {
        this.on('change:className change:attributes change:methods', function() {
            this.updateRectangles();
        }, this);

        this.updateRectangles();
        joint.dia.Element.prototype.initialize.apply(this, arguments);
    },

    updateRectangles: function() {
        var attrs = this.get('attrs');
        var className = this.get('className');
        var attributes = this.get('attributes') || [];
        var methods = this.get('methods') || [];

        // Calcular dimensiones
        var headerHeight = 35;
        var attrsHeight = Math.max(25, attributes.length * 16 + 10);
        var methodsHeight = Math.max(25, methods.length * 16 + 10);
        var totalHeight = headerHeight + attrsHeight + methodsHeight;
        var width = this.get('size').width;

        // Nombre de la clase
        attrs['.uml-class-name-rect'].width = width;
        attrs['.uml-class-name-rect'].height = headerHeight;
        attrs['.uml-class-name-text'].text = className;

        // Atributos
        attrs['.uml-class-attrs-rect'].width = width;
        attrs['.uml-class-attrs-rect'].height = attrsHeight;
        attrs['.uml-class-attrs-rect'].y = headerHeight;
        attrs['.uml-class-attrs-text'].text = attributes.length > 0 ? attributes.join('\n') : '';

        // Métodos
        attrs['.uml-class-methods-rect'].width = width;
        attrs['.uml-class-methods-rect'].height = methodsHeight;
        attrs['.uml-class-methods-rect'].y = headerHeight + attrsHeight;
        attrs['.uml-class-methods-text'].text = methods.length > 0 ? methods.join('\n') : '';

        // Actualizar tamaño
        this.set('size', { width: width, height: totalHeight });
        this.set('attrs', attrs);
    }
});

// Links/Relaciones UML
joint.shapes.uml.Association = joint.shapes.standard.Link.extend({
    defaults: joint.util.deepSupplement({
        type: 'uml.Association',
        attrs: {
            line: {
                stroke: '#2563eb',
                'stroke-width': 2
            }
        },
        labels: [{
            attrs: { text: { text: '1' } },
            position: { distance: 0.1 }
        }, {
            attrs: { text: { text: '1' } },
            position: { distance: 0.9 }
        }]
    }, joint.shapes.standard.Link.prototype.defaults)
});

joint.shapes.uml.Inheritance = joint.shapes.standard.Link.extend({
    defaults: joint.util.deepSupplement({
        type: 'uml.Inheritance',
        attrs: {
            line: {
                stroke: '#2563eb',
                'stroke-width': 2,
                'target-marker': {
                    'type': 'path',
                    'd': 'M 10 -5 0 0 10 5 z',
                    'fill': 'white',
                    'stroke': '#2563eb'
                }
            }
        }
    }, joint.shapes.standard.Link.prototype.defaults)
});

joint.shapes.uml.Aggregation = joint.shapes.standard.Link.extend({
    defaults: joint.util.deepSupplement({
        type: 'uml.Aggregation',
        attrs: {
            line: {
                stroke: '#2563eb',
                'stroke-width': 2,
                'source-marker': {
                    'type': 'path',
                    'd': 'M 10 -5 5 0 10 5 15 0 z',
                    'fill': 'white',
                    'stroke': '#2563eb'
                }
            }
        },
        labels: [{
            attrs: { text: { text: '1' } },
            position: { distance: 0.1 }
        }, {
            attrs: { text: { text: '*' } },
            position: { distance: 0.9 }
        }]
    }, joint.shapes.standard.Link.prototype.defaults)
});

joint.shapes.uml.Composition = joint.shapes.standard.Link.extend({
    defaults: joint.util.deepSupplement({
        type: 'uml.Composition',
        attrs: {
            line: {
                stroke: '#2563eb',
                'stroke-width': 2,
                'source-marker': {
                    'type': 'path',
                    'd': 'M 10 -5 5 0 10 5 15 0 z',
                    'fill': '#2563eb',
                    'stroke': '#2563eb'
                }
            }
        },
        labels: [{
            attrs: { text: { text: '1' } },
            position: { distance: 0.1 }
        }, {
            attrs: { text: { text: '*' } },
            position: { distance: 0.9 }
        }]
    }, joint.shapes.standard.Link.prototype.defaults)
});
